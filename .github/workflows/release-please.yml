name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.PAT }}
  build-and-publish:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write # For cosign keyless signing
      attestations: write # For build attestations

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.9.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install ko
        uses: ko-build/setup-ko@v0.9

      - name: Build and push container image
        run: |
          # Build and push the container image
          ko build --bare --tags latest --tags ${{ needs.release-please.outputs.tag_name }} ./cmd/gitguard

          # Sign the container image
          cosign sign --yes ghcr.io/omercnet/gitguard:${{ needs.release-please.outputs.tag_name }}
          cosign sign --yes ghcr.io/omercnet/gitguard:latest
        env:
          KO_DOCKER_REPO: ghcr.io/omercnet/gitguard
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_EXPERIMENTAL: 1
